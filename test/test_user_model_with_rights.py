# coding: utf-8

"""
    EcoTaxa

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.0.17
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import ecotaxa_cli_py
from ecotaxa_cli_py.models.user_model_with_rights import UserModelWithRights  # noqa: E501
from ecotaxa_cli_py.rest import ApiException

class TestUserModelWithRights(unittest.TestCase):
    """UserModelWithRights unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test UserModelWithRights
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = ecotaxa_cli_py.models.user_model_with_rights.UserModelWithRights()  # noqa: E501
        if include_optional :
            return UserModelWithRights(
                id = 1, 
                email = 'user@email.com', 
                name = 'userName', 
                organisation = 'Oceanographic Laboratory of Villefranche sur Mer - LOV', 
                active = True, 
                country = 'France', 
                usercreationdate = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                usercreationreason = 'Analysis of size and shapes of plastic particles', 
                can_do = [1,4], 
                last_used_projects = [{"projid":3,"title":"Zooscan point B"},{"projid":1,"title":"Zooscan Tara Med"}]
            )
        else :
            return UserModelWithRights(
                id = 1,
                email = 'user@email.com',
                name = 'userName',
        )

    def testUserModelWithRights(self):
        """Test UserModelWithRights"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
